---
- name: install extra monitoring tools (prometheus)
  hosts: localhost
  tasks:
    - name: install packages
      apt:
        name: prometheus
        state: present

    - name: config prometheus listener
      lineinfile:
        path: /etc/default/prometheus
        regexp: '^ARGS='
        line: "ARGS=\"--web.listen-address='127.0.0.1:9090'\""
      notify: restart prometheus

    - name: config prometheus-node-exporter listener
      lineinfile:
        path: /etc/default/prometheus-node-exporter
        regexp: '^ARGS='
        line: "ARGS=\"--web.listen-address='127.0.0.1:9100'\""
      notify: restart prometheus-node-exporter

    - name: config prometheus.yml
      copy:
        src: files/prometheus.yml
        dest: /etc/prometheus/prometheus.yml
        owner: root
        group: root
        mode: 0644
      notify: restart prometheus

  handlers:
    - name: restart prometheus
      service:
        name: prometheus
        state: restarted

    - name: restart prometheus-node-exporter
      service:
        name: prometheus-node-exporter
        state: restarted

- name: install extra monitoring tools (grafana)
  hosts: localhost
  tasks:
    - name: install deps
      apt:
        name: 
          - apt-transport-https
          - software-properties-common
          - wget
        state: present

    - name: add repo key
      apt_key:
        id: 8C8C34C524098CB6
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: add repo
      apt_repository:
        repo: deb https://packages.grafana.com/oss/deb stable main
        state: present

    - name: install packages
      apt:
        name: grafana
        state: present

    - name: enable grafana-server
      service:
        name: grafana-server
        enabled: yes

    - name: configure grafana-server listener
      ini_file:
        path: /etc/grafana/grafana.ini
        section: server
        option: "{{ item['key'] }}"
        value: "{{ item['val'] }}"
      loop:
        - {key: http_addr, val: 127.0.0.1}
        - {key: root_url, val: "https://{{ ansible_fqdn }}/grafana"}
        - {key: serve_from_sub_path, val: 'true'}
      notify: restart grafana-server

    # not optimal but very simple
    - name: set admin secret
      vars:
        admin_secret: "{{ lookup('password', '/etc/grafana/grafana.admin.secret length=40') }}"
      command: "grafana-cli admin reset-admin-password {{ admin_secret }}"

  handlers:
    - name: restart grafana-server
      service:
        name: grafana-server
        state: restarted
